@page
@model IndexModel

@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;

    @functions{
        @using System.Data;
        @using System.IO;
        @using Microsoft.Data.SqlClient;

        public async Task<string> BackupDatabase()
        {
            var connectionString = "Server=(localdb)\\mssqllocaldb;Database=aspnet-PetthyDb;Trusted_Connection=True;MultipleActiveResultSets=true";

            var backupFolder = "C:/Program Files/Microsoft SQL Server/MSSQL12.SQLEXPRESS/MSSQL/Backup/";

            var sqlConStrBuilder = new SqlConnectionStringBuilder(connectionString);

            var backupFileName = String.Format("{0}{1}-{2}.bak",
                backupFolder, sqlConStrBuilder.InitialCatalog,
                DateTime.Now.ToString("yyyy-MM-dd"));

            using (var connection = new SqlConnection(sqlConStrBuilder.ConnectionString))
            {
                var query = String.Format("BACKUP DATABASE {0} TO DISK='{1}'",
                    sqlConStrBuilder.InitialCatalog, backupFileName);

                using (var command = new SqlCommand(query, connection))
                {
                    await connection.OpenAsync();
                    await command.ExecuteNonQueryAsync();
                    return "Backup done";
                }
            }
        }

        public async Task<string> RestoreDatabase()
        {
            string localDatabasePath = "C:/Users/N/";
            string fileListDataName = "PetthyDbRestoreData";
            string fileListLogName = "PetthyDbRestoreLog";

            string localDownloadFilePath = "C:/Program Files/Microsoft SQL Server/MSSQL12.SQLEXPRESS/MSSQL/Backup/";
            Console.WriteLine(string.Format("Restoring database {0}...", localDatabasePath));
            string fileListDataPath = Directory.GetParent(localDownloadFilePath).Parent.FullName + @"\DATA\" + fileListDataName + ".mdf";
            string fileListLogPath = Directory.GetParent(localDownloadFilePath).Parent.FullName + @"\DATA\" + fileListLogName + ".ldf";

            string sql = @"RESTORE DATABASE @dbName FROM DISK = @path WITH RECOVERY,
            MOVE @fileListDataName TO @fileListDataPath,
            MOVE @fileListLogName TO @fileListLogPath";

            string connectionString = "Server=(localdb)\\mssqllocaldb;Database=aspnet-PetthyDb;Trusted_Connection=True;MultipleActiveResultSets=true";
            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                connection.Open();
                using (SqlCommand command = new SqlCommand(sql, connection))
                {
                    command.CommandType = CommandType.Text;
                    command.CommandTimeout = 7200;
                    command.Parameters.AddWithValue("@dbName", fileListDataName);
                    command.Parameters.AddWithValue("@path", localDatabasePath);
                    command.Parameters.AddWithValue("@fileListDataName", fileListDataName);
                    command.Parameters.AddWithValue("@fileListDataPath", fileListDataPath);
                    command.Parameters.AddWithValue("@fileListLogName", fileListLogName);
                    command.Parameters.AddWithValue("@fileListLogPath", fileListLogPath);

                    await command.ExecuteNonQueryAsync();
                    return "Restore done";
                }
            }
        }
    }
}
@inject UserManager<ApplicationUser> UserManager
<h4>@ViewData["Title"]</h4>
<partial name="_StatusMessage" model="Model.StatusMessage" />

<div style=" float: right;">
    @{var user = await UserManager.GetUserAsync(User);
        if (user.Email == "admin@gmail.com")
        {
            <button id="backup" onclick="function backup() {
  alert('Database was succesfully backed up.');
    }; setTimeout(backup, 6000); " class="btn btn-primary">
                Backup Database
            </button>
            <button id="restore" onclick="@RestoreDatabase()" class="btn btn-primary">Restore Database</button>
            <!--<button id="backup" type="submit" class="btn btn-primary">Backup Database</button>
            <button id="restore" type="submit" class="btn btn-primary">Restore Database</button>-->
    } }



</div>
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username"></label>
                <input asp-for="Username" class="form-control" disabled />
            </div>
            <div class="form-group">
                <label asp-for="Input.PhoneNumber"></label>
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
        </form>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}